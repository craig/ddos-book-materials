global
        user haproxy
        group haproxy

        stats socket unix@/run/haproxy.stat user haproxy gid haproxy mode 600 level admin
        stats timeout 30m
        log /dev/log local0
        tune.ssl.capture-buffer-size 96

defaults
        timeout client 13s
        timeout http-request 13s
        timeout server 15s
        timeout connect 13s

frontend test_fe
        bind :80

        mode http
        log global
        option httplog

        filter bwlim-out out_by_src limit 1000k key src table backend_sticktable
        http-request set-bandwidth-limit out_by_src

        acl l4_conn_rate sc1_conn_rate(backend_sticktable) gt 5
        acl l7_req_rate sc1_http_req_rate(backend_sticktable) 5
        acl l7_err_cnt sc1_http_err_rate(backend_sticktable) 5

        acl srcip_gpc0_inc_1 sc1_inc_gpc0(backend_sticktable) gt 1
        acl srcip_gpc0_get_gt0 sc1_get_gpc0(backend_sticktable) gt 0
        tcp-request connection track-sc1 src table backend_sticktable
        tcp-request connection reject if srcip_gpc0_get_gt0

        tcp-request connection reject if l4_conn_rate srcip_gpc0_inc_1
        tcp-request connection reject if l7_req_rate srcip_gpc0_inc_1
        tcp-request connection reject if l7_err_cnt srcip_gpc0_inc_1

        http-request deny if l7_req_rate srcip_gpc0_inc_1
        http-request deny if l7_err_cnt srcip_gpc0_inc_1

        http-request deny if !HTTP
        http-request deny if !HTTP_1.0 !HTTP_1.1 !HTTP_2.0
        
        http-request deny if { hdr_sub(User-Agent) -i -m sub sqlmap }
        http-request deny if { path -i -m beg /api/ }

        default_backend test_be

frontend test_fe_ssl
        bind :443 ssl crt oil.pem 

        mode http
        log global
        option httplog

        # calculate ja3 hash plain
        http-request set-var-fmt(req.ja3_plain) %[ssl_fc_protocol_hello_id],%[ssl_fc_cipherlist_bin(1),be2dec(-,2)],%[ssl_fc_extlist_bin(1),be2dec(-,2)],%[ssl_fc_eclist_bin(1),be2dec(-,2)],%[ssl_fc_ecformats_bin,be2dec(-,1)]

        # calculate md5
        http-request set-var-fmt(req.ja3) %[var(req.ja3_plain),digest(md5),hex,lower]

        # create and fill capture slot for ja3
        declare capture request len 32
        http-request capture var(req.ja3) id 0

        # create ACL from ja3 hashes, block if requests match
        acl evil_ja3 var(req.ja3) -m str -f ./ja3_hashes
        http-request deny if evil_ja3

	http-request set-header X-Real-IP %[src]
        default_backend test_be


backend test_be
        mode http
	server myself_81 localhost:8093

backend backend_sticktable
        stick-table type ipv6 size 2m expire 10m store gpc0,conn_cnt,conn_rate(10s),sess_rate(10s),http_req_cnt,http_req_rate(10s),http_err_cnt,http_err_rate(10s),bytes_in_cnt,bytes_out_cnt,bytes_in_rate(1s),bytes_out_rate(1s)

